; todo
; max-capacity - args b(building num) n(max capacity) 
; enter-garage - args b(building num)
; exit-garage - args b(building num)
(defvar *max_cap_1* 0) 
(defvar *max_cap_2* 0)

(defvar *garage1_cars* 0)
(defvar *garage2_cars* 0)

(defun max-capacity (b n)
  (if (or (<= b 0) (> b 2))
      (print "building range out of bounds"))
  (if (= b 1)
      (setq *max_cap_1* n))
  (if (= b 2)
      (setq *max_cap_2* n)))

(defun enter-garage (b)
  (if (or (<= b 0) (> b 2))
      (print "building range out of bounds"))
  (if (= b 1)
      (if (< *garage1_cars* *max_cap_1*)
          (- *max_cap_1* (setq *garage1_cars* (+ *garage1_cars* 1))) (print "max capacity reached")))
  (if (= b 2)
      (if (< *garage2_cars* *max_cap_2*)
          (- *max_cap_2* (setq *garage2_cars* (+ *garage2_cars* 1))) (print "max capacity reached")))
)

(defun exit-garage (b)
  (if (or (<= b 0) (> b 2))
      (print "building range out of bounds"))
  (if (= b 1)
      (if (> *garage1_cars* 0)
          (- *max_cap_1* (setq *garage1_cars* (- *garage1_cars* 1))) (print "no cars left")))
  (if (= b 2)
      (if (> *garage2_cars* 0)
          (- *max_cap_2* (setq *garage2_cars* (- *garage2_cars* 1))) (print "no cars left")))
)
